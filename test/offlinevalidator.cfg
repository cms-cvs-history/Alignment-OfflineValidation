process Demo =  {
    
    source = PoolSource 
    { 
	# replace 'myfile.root' with the source file you want to use
	untracked vstring fileNames = {
	    //'file:/scratch/ebutz/0216B809-20BE-DC11-A473-000423D9863C.root' // QCD 
	    //'file:/scratch/ebutz/7C2F0D9F-3EC2-DC11-89B0-000423D989F0.root' // single pion
	    'file:/tmp/ebutz/10AC8F3C-57D3-DC11-94FC-000423DD2F34.root'
	} 
    }
   
    untracked PSet maxEvents = { untracked int32 input = 1000}


    include "CalibTracker/Configuration/data/SiStrip_FakeLorentzAngle.cff"
  
    include "FWCore/MessageLogger/data/MessageLogger.cfi"
    replace MessageLogger.cerr.FwkReport.reportEvery = 10
    replace MessageLogger.cerr.threshold = "INFO"
    replace MessageLogger.debugModules = {"Validator"}
    
    include "CalibTracker/Configuration/data/SiStrip_FakeLorentzAngle.cff"
    include "CalibTracker/Configuration/data/SiPixel_FakeLorentzAngle.cff"


    include "RecoTracker/TrackProducer/data/RefitterWithMaterial.cff"
    replace TrackRefitter.src = "ctfWithMaterialTracks"
    replace TrackRefitter.useHitsSplitting = true
    # needed for refit of hits:
    # usually without refit: 
    replace TrackRefitter.TTRHBuilder = "WithoutRefit"# TransientTrackingRecHitBuilder: no refit of hits...
    include "RecoTracker/TransientTrackingRecHit/data/TransientTrackingRecHitBuilderWithoutRefit.cfi"
    # ... but matching for strip stereo should be redone: 
    replace ttrhbwor.Matcher = "StandardMatcher"

    // second refitter to produce splitted rechits in 1_8 samples
    
    module Refitter2 = TrackRefitter from "RecoTracker/TrackProducer/data/RefitterWithMaterial.cfi"
    replace Refitter2.src = "TrackRefitter"
    replace Refitter2.TrajectoryInEvent = true
    # Database configuration
    include "CondCore/DBCommon/data/CondDBCommon.cfi"
    include "CondCore/DBCommon/data/CondDBSetup.cfi"

    #include "Configuration/StandardSequences/data/FakeConditions.cff"

    # Misalignment scenario
    //include "Alignment/TrackerAlignment/data/1000pbScenario.cff"
    //es_prefer MisalignedTracker = MisalignedTrackerESProducer { }
    

    //es_source = PoolDBESSource {
    //	using CondDBSetup
    //	#string connect = "sqlite_file:Alignments.db"    
    //	string connect = "frontier://FrontierDev/CMS_COND_ALIGNMENT" 
    //	#Uncomment for < 1_7 (except Frontier) #untracked string catalog = "file:conddbcatalog.xml"
    //	string timetype = "runnumber"
    //	VPSet toGet = 
    //	{
    //	    //{ string record = "TrackerAlignmentRcd"      string tag = "Tracker10pbScenario" },
    //	    //{ string record = "TrackerAlignmentErrorRcd" string tag = "Tracker10pbScenarioErrors" }
    //	    { string record = "TrackerAlignmentRcd" 
    //		string tag = "Misalignment_Elliptical" },
    //	    { string record = "TrackerAlignmentErrorRcd" 
    //		string tag = "Misalignment_Elliptical_APE" }
    //	}
    //}


    
    # Apply (mis)alignment
    //replace TrackerDigiGeometryESModule.applyAlignment = true


    include "Alignment/OfflineValidation/data/TrackerOfflineValidation.cfi"
    replace TrackerOfflineValidation.Tracks = "Refitter2"
    replace TrackerOfflineValidation.trajectoryInput = "Refitter2"


    service  = TFileService {
    	string fileName = "AlignmentValidation_Elliptical.root"
     }

    path p = { TrackRefitter , Refitter2 , TrackerOfflineValidation } 
    
}
